#include<stdio.h>
#include<stdlib.h>

typedef struct Stack{
	int top;
	int capacity;
	int *arr;
}stack;

 //(struct Stack) stack;

//function to create a Stack
stack* createStack(int capacity)
{
	stack *s=(stack *)malloc(sizeof(stack));
	s->capacity=capacity;
	s->arr=(int *)malloc(s->capacity*sizeof(int));
	s->top=-1;
	
	return s;
}

//function to check weather stack is full or not
int isFull(stack *s)
{
	if(s->top==s->capacity)
	{
		return 1;
	}
	else 
	{
		return 0;
	}
}

//function to check weather stack is Empty or not
int isEmpty(stack *s)
{
	if(s->top==-1)
	{
		return 1;
	}
	else 
	{
		return 0;
	}
}

//function to insert an element in the stack
void push(stack *s,int data)
{
	if(isFull(s)==0)
	{
		s->top++;
		s->arr[s->top]=data;
	}
	
	else
	{
		printf("Stack is Full: overflow");
	}
}

//function to delete an element from the stack
int pop(stack *s)
{
    int result;
	if(isEmpty(s))
	{
		printf("Stack is Empty: underflow");
		result=0;
	}
	
	else
	{
		result=s->top;
		s->top--;
		return result;
	}
}


//Function to display all the elemnts;
void display(stack* s)
{
	int p=s->top,i;
	for(i=0;i<p;i++)
	{
		printf("%d",*(s->arr+i));
	}
}



void main()
{
	int choice,data;
	stack *s=createStack(10);
	while(1)
	{
	printf("Please enter a choice \n");
	printf("1. Push \n2. Pop \n3. Display 4. Exit\n");
	scanf("%d",&choice);
	
	switch (choice)
	{
		case 1:
				printf("Please enter data \n");
				scanf("%d",&data);
		        push(s,data);
				break;
		case 2:
				printf("%d",pop(s));
				break;
		case 3:
				display(s);
				break;
		
		case 4:
				break;
	}
	
	
	}
}
